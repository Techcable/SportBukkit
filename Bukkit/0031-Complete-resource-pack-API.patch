From 15e82655cf25d076f325467c203337f587cb8cd5 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sat, 4 Apr 2015 22:59:54 -0400
Subject: [PATCH] Complete resource pack API


diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index e2514b8..70b9065 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -19,6 +19,7 @@ import org.bukkit.Statistic;
 import org.bukkit.WeatherType;
 import org.bukkit.command.CommandSender;
 import org.bukkit.conversations.Conversable;
+import org.bukkit.event.player.PlayerResourcePackStatusEvent;
 import org.bukkit.map.MapView;
 import org.bukkit.plugin.messaging.PluginMessageRecipient;
 import org.bukkit.scoreboard.Scoreboard;
@@ -1099,13 +1100,36 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param url The URL from which the client will download the resource
      *     pack. The string must contain only US-ASCII characters and should
      *     be encoded as per RFC 1738.
+     * @param hash A 40 character hexadecimal and lowercase SHA-1 digest of
+     *             the resource pack file.
      * @throws IllegalArgumentException Thrown if the URL is null.
      * @throws IllegalArgumentException Thrown if the URL is too long. The
      *     length restriction is an implementation specific arbitrary value.
      */
+    public void setResourcePack(String url, String hash);
+
+    @Deprecated
     public void setResourcePack(String url);
 
     /**
+     * @return the most recent resource pack status received from the player,
+     *         or null if no status has ever been received from this player.
+     */
+    public PlayerResourcePackStatusEvent.Status getResourcePackStatus();
+
+    /**
+     * @return the most recent resource pack hash received from the player,
+     *         or null if no hash has ever been received from this player.
+     */
+    public String getResourcePackHash();
+
+    /**
+     * @return true if the last resource pack status received from this player
+     *         was {@link PlayerResourcePackStatusEvent.Status#SUCCESSFULLY_LOADED}
+     */
+    public boolean hasResourcePack();
+
+    /**
      * Gets the Scoreboard displayed to this player
      *
      * @return The current scoreboard seen by this player
diff --git a/src/main/java/org/bukkit/event/player/PlayerResourcePackStatusEvent.java b/src/main/java/org/bukkit/event/player/PlayerResourcePackStatusEvent.java
index 4c49801..045d7f5 100644
--- a/src/main/java/org/bukkit/event/player/PlayerResourcePackStatusEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerResourcePackStatusEvent.java
@@ -11,10 +11,12 @@ public class PlayerResourcePackStatusEvent extends PlayerEvent {
 
     private static final HandlerList handlers = new HandlerList();
     private final Status status;
+    private final String hash;
 
-    public PlayerResourcePackStatusEvent(final Player who, Status resourcePackStatus) {
+    public PlayerResourcePackStatusEvent(final Player who, Status resourcePackStatus, String hash) {
         super(who);
         this.status = resourcePackStatus;
+        this.hash = hash;
     }
 
     /**
@@ -26,6 +28,10 @@ public class PlayerResourcePackStatusEvent extends PlayerEvent {
         return status;
     }
 
+    public String getHash() {
+        return hash;
+    }
+
     @Override
     public HandlerList getHandlers() {
         return handlers;
-- 
1.9.0

