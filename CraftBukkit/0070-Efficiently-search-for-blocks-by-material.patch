From 1d0ea8e1ba79e0029cd6a2097a78097d57b0ffc2 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Mon, 16 Feb 2015 04:58:46 -0500
Subject: [PATCH] Efficiently search for blocks by material


diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 582e684..d997b46 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -693,6 +693,7 @@ public class Chunk {
         }
     }
 
+    public void removeTileEntityAt(BlockPosition blockposition) { this.d(blockposition); } // SportBukkit - alias for following method
     public void d(BlockPosition blockposition) {
         if (this.i) {
             TileEntity tileentity = (TileEntity) this.tileEntities.remove(blockposition);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
index bacb3db..831a1ac 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
@@ -2,6 +2,8 @@ package org.bukkit.craftbukkit;
 
 import java.lang.ref.WeakReference;
 import java.util.Arrays;
+import java.util.HashSet;
+import java.util.Set;
 
 import net.minecraft.server.*;
 
@@ -11,6 +13,7 @@ import org.bukkit.World;
 import org.bukkit.block.Block;
 import org.bukkit.block.BlockState;
 import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.entity.Entity;
 import org.bukkit.ChunkSnapshot;
 import org.bukkit.material.MaterialData;
@@ -73,6 +76,31 @@ public class CraftChunk implements Chunk {
         return new CraftBlock(this, (getX() << 4) | (x & 0xF), y, (getZ() << 4) | (z & 0xF));
     }
 
+    @Override
+    public Set<Block> getBlocks(Material material) {
+        Set<Block> blocks = new HashSet<Block>();
+
+        net.minecraft.server.Block nmsBlock = CraftMagicNumbers.getBlock(material);
+        net.minecraft.server.Chunk chunk = getHandle();
+
+        for(ChunkSection section : chunk.getSections()) {
+            if(section == null || section.a()) continue; // ChunkSection.a() -> true if section is empty
+
+            for(int x = 0; x < 16; x++) {
+                for(int y = 0; y < 16; y++) {
+                    for(int z = 0; z < 16; z++) {
+                        IBlockData blockData = section.getType(x, y, z);
+                        if(blockData.getBlock() == nmsBlock) {
+                            blocks.add(getBlock(x, section.getYPosition() + y, z));
+                        }
+                    }
+                }
+            }
+        }
+
+        return blocks;
+    }
+
     public Entity[] getEntities() {
         int count = 0, index = 0;
         net.minecraft.server.Chunk chunk = getHandle();
@@ -290,18 +318,19 @@ public class CraftChunk implements Chunk {
 
         net.minecraft.server.Chunk chunk = this.getHandle();
 
-        net.minecraft.server.Material originalMaterial = net.minecraft.server.Block.getById(original.getId()).getMaterial();
+        net.minecraft.server.Block nmsOriginal = net.minecraft.server.Block.getById(original.getId());
         IBlockData nmsReplacement = net.minecraft.server.Block.getById(replacement.getItemTypeId()).fromLegacyData(replacement.getData());
 
         int count = 0;
 
         for(ChunkSection section : chunk.getSections()) {
             if(section != null) {
+                BlockPosition.MutableBlockPosition position = new BlockPosition.MutableBlockPosition();
                 for(int x = 0; x < 16; x++) {
                     for(int y = 0; y < 16; y++) {
                         for(int z = 0; z < 16; z++) {
-                            if(section.getType(x, y, z).getBlock().getMaterial() == originalMaterial) {
-                                chunk.e(new BlockPosition(x, y + section.getYPosition(), z)); // remove the tile entity
+                            if(section.getType(x, y, z).getBlock() == nmsOriginal) {
+                                chunk.removeTileEntityAt(position.c(x, y + section.getYPosition(), z));
                                 section.setType(x, y, z, nmsReplacement);
                                 count++;
                             }
-- 
1.9.0

