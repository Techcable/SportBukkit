From b1fdab424ddbc7a836017f8d22816190e0c44c59 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 2 Aug 2012 17:54:44 -0700
Subject: [PATCH] Implement player collision API


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 7e630a7..e2364cb 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -64,7 +64,7 @@ public abstract class Entity implements ICommandListener {
     private static double c = 1.0D;
     public static int entityCount; // SportBukkit - private -> public
     private int id;
-    public boolean i;
+    public boolean i; public void setCanObstruct(boolean yes) { this.i = yes; } // SportBukkit - add setter
     public final List<Entity> passengers;
     protected int j;
     private Entity as;
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 8417627..6cdbe01 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -391,7 +391,7 @@ public abstract class EntityHuman extends EntityLiving {
 
             List list = this.world.getEntities(this, axisalignedbb);
 
-            for (int i = 0; i < list.size(); ++i) {
+            if (this.isCollidable()) for (int i = 0; i < list.size(); ++i) { // CraftBukkit
                 Entity entity = (Entity) list.get(i);
 
                 if (!entity.dead) {
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 2bd03a5..7a32406 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -1982,7 +1982,7 @@ public abstract class EntityLiving extends Entity {
     protected void cn() {
         List list = this.world.a((Entity) this, this.getBoundingBox(), IEntitySelector.a(this));
 
-        if (!list.isEmpty()) {
+        if (this.isCollidable() && !list.isEmpty()) { // SportBukkit
             for (int i = 0; i < list.size(); ++i) {
                 Entity entity = (Entity) list.get(i);
                 // TODO better check now?
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index ca55257..d1dd97a 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -61,6 +61,8 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public IChatBaseComponent listName;
     public org.bukkit.Location compassTarget;
     public int newExp = 0;
+    public boolean collidesWithEntities = true; // CraftBukkit
+
     public int newLevel = 0;
     public int newTotalExp = 0;
     public boolean keepLevel = false;
@@ -180,6 +182,18 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.playerConnection.sendPacket(new PacketPlayOutCombatEvent(this.getCombatTracker(), PacketPlayOutCombatEvent.EnumCombatEventType.ENTER_COMBAT));
     }
 
+    // CraftBukkit start
+    @Override
+    public boolean isInteractable() {
+        return this.collidesWithEntities && super.isInteractable();
+    }
+
+    @Override
+    public boolean isCollidable() {
+        return this.collidesWithEntities && super.isCollidable();
+    }
+    // CraftBukkit end
+
     public void exitCombat() {
         super.exitCombat();
         this.playerConnection.sendPacket(new PacketPlayOutCombatEvent(this.getCombatTracker(), PacketPlayOutCombatEvent.EnumCombatEventType.END_COMBAT));
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index af2a25a..63e9599 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -1507,6 +1507,15 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         getHandle().updateAbilities();
     }
 
+    public void setCollidesWithEntities(boolean yes) {
+        getHandle().collidesWithEntities = yes;
+        getHandle().setCanObstruct(yes);
+    }
+
+    public boolean getCollidesWithEntities() {
+        return getHandle().collidesWithEntities;
+    }
+
     @Override
     public boolean getAllowFlight() {
         return getHandle().abilities.canFly;
-- 
1.9.0

