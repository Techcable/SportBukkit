From 2333793a54cfece31a42f854f4fd489a2a27a4e0 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sat, 4 Apr 2015 23:17:52 -0400
Subject: [PATCH] Complete resource pack API


diff --git a/src/main/java/net/minecraft/server/PacketPlayInResourcePackStatus.java b/src/main/java/net/minecraft/server/PacketPlayInResourcePackStatus.java
index 30ca225..c7949cf 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInResourcePackStatus.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInResourcePackStatus.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayInResourcePackStatus implements Packet<PacketListenerPlayIn> {
 
-    private String a;
+    public String a; // SportBukkit - make public
     public PacketPlayInResourcePackStatus.EnumResourcePackStatus status;
 
     public PacketPlayInResourcePackStatus() {}
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index ae2b954..57559f0 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1046,7 +1046,10 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
     // CraftBukkit start
     public void a(PacketPlayInResourcePackStatus packetplayinresourcepackstatus) {
-        this.server.getPluginManager().callEvent(new PlayerResourcePackStatusEvent(getPlayer(), PlayerResourcePackStatusEvent.Status.values()[packetplayinresourcepackstatus.status.ordinal()]));
+        PlayerConnectionUtils.ensureMainThread(packetplayinresourcepackstatus, this, this.player.x());
+        final PlayerResourcePackStatusEvent.Status status = PlayerResourcePackStatusEvent.Status.values()[packetplayinresourcepackstatus.status.ordinal()];
+        this.getPlayer().setResourcePackStatus(status, packetplayinresourcepackstatus.a);
+        this.server.getPluginManager().callEvent(new PlayerResourcePackStatusEvent(getPlayer(), status, packetplayinresourcepackstatus.a));
     }
     // CraftBukkit end
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 00fedfc..b1ab482 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -61,6 +61,7 @@ import org.bukkit.entity.EntityType;
 import org.bukkit.entity.Player;
 import org.bukkit.event.player.PlayerGameModeChangeEvent;
 import org.bukkit.event.player.PlayerRegisterChannelEvent;
+import org.bukkit.event.player.PlayerResourcePackStatusEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerUnregisterChannelEvent;
 import org.bukkit.inventory.InventoryView.Property;
@@ -86,6 +87,8 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     private double healthScale = 20;
     private Skin realSkin;
     private boolean showInvisibles;
+    private PlayerResourcePackStatusEvent.Status resourcePackStatus;
+    private String resourcePackHash;
 
     private final Map<CommandSender, String> fakeNames = new WeakHashMap<CommandSender, String>();
     private final Map<CommandSender, String> fakeDisplayNames = new WeakHashMap<CommandSender, String>();
@@ -1370,9 +1373,36 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
     @Override
     public void setResourcePack(String url) {
+        setResourcePack(url, "null");
+    }
+
+    @Override
+    public void setResourcePack(String url, String hash) {
         Validate.notNull(url, "Resource pack URL cannot be null");
+        Validate.notNull(hash, "Hash cannot be null");
+        Validate.isTrue(hash.matches("^[0-9a-f]{40}$"), "Hash must be a 40 character SHA-1 digest with lowercase letters");
+
+        getHandle().setResourcePack(url, hash);
+    }
+
+    @Override
+    public PlayerResourcePackStatusEvent.Status getResourcePackStatus() {
+        return resourcePackStatus;
+    }
+
+    @Override
+    public String getResourcePackHash() {
+        return resourcePackHash;
+    }
+
+    @Override
+    public boolean hasResourcePack() {
+        return this.resourcePackStatus == PlayerResourcePackStatusEvent.Status.SUCCESSFULLY_LOADED;
+    }
 
-        getHandle().setResourcePack(url, "null");
+    public void setResourcePackStatus(PlayerResourcePackStatusEvent.Status status, String hash) {
+        this.resourcePackStatus = status;
+        this.resourcePackHash = hash;
     }
 
     public void addChannel(String channel) {
-- 
1.9.0

